name: Build and Release

on:
  push:
    branches:
      - main
      - master
      - feature/linux-support
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: AppImage
          - os: windows-latest
            platform: windows
            artifact_name: Setup

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Build application
        run: npm run build

      - name: Build distribution (Linux)
        if: matrix.platform == 'linux'
        run: npm run dist:linux:ci
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build distribution (Windows)
        if: matrix.platform == 'windows'
        run: npm run dist:unsigned
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: xilehud-linux
          path: |
            dist_electron/*.AppImage
            dist_electron/latest-linux.yml
          if-no-files-found: error

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: xilehud-windows
          path: |
            dist_electron/*.exe
            dist_electron/latest.yml
          if-no-files-found: warn

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.AppImage
            artifacts/**/*.exe
            artifacts/**/*.yml
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

